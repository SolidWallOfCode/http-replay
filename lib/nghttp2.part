Import('*')
PartName("nghttp2")
PartVersion(GitVersionFromTag("1.0.5.dev"))

DependsOn([
    Component("jemalloc", requires=REQ.DEFAULT | REQ.SDK),
    Component("openssl", requires=REQ.DEFAULT | REQ.SDK),
    Component("libevent", requires=REQ.DEFAULT | REQ.SDK),
    Component("jansson", requires=REQ.DEFAULT | REQ.SDK),
    Component("libev", requires=REQ.DEFAULT | REQ.SDK),
])

# generate the build files
env.Command(
    ["Makefile"],
    [
        "${CHECK_OUT_DIR}/CMakeLists.txt",
        env.Dir("${DEPENDS.openssl.SDK}"),
        env.Dir("${DEPENDS.jemalloc.SDK}"),
        env.Dir("${DEPENDS.libevent.SDK}"),
        env.Dir("${DEPENDS.jansson.SDK}"),
        env.Dir("${DEPENDS.libev.SDK}"),
    ],
    '''cd ${TARGET.dir} ; rm -rf *;\
     cmake ${SOURCE.dir.abspath}\
     -DCMAKE_INSTALL_PREFIX=${ABSPATH('#_makeinstall')}/${PART_NAME}\
     -DCMAKE_INSTALL_LIBDIR=lib\
     -DCMAKE_BUILD_TYPE=Release\
     -DCMAKE_PREFIX_PATH="${DEPENDS.jemalloc.SDK};${DEPENDS.jansson.SDK};${DEPENDS.libevent.SDK};${DEPENDS.openssl.SDK};${DEPENDS.libev.SDK}"'''
)

# build the code
env.Command(
    [
        "#_makeinstall/${PART_NAME}/bin/deflatehd",
        "#_makeinstall/${PART_NAME}/bin/h2load",
        "#_makeinstall/${PART_NAME}/bin/inflatehd",
        "#_makeinstall/${PART_NAME}/bin/nghttp",
        "#_makeinstall/${PART_NAME}/bin/nghttpd",
        "#_makeinstall/${PART_NAME}/bin/nghttpx",
        "#_makeinstall/${PART_NAME}/lib/pkgconfig/libnghttp2.pc",
        "#_makeinstall/${PART_NAME}/include/nghttp2/nghttp2.h",
        "#_makeinstall/${PART_NAME}/include/nghttp2/nghttp2ver.h",
        env.FileSymbolicLink("#_makeinstall/${PART_NAME}/lib/libnghttp2.so"),
        env.FileSymbolicLink("#_makeinstall/${PART_NAME}/lib/libnghttp2.so.14"),
        "#_makeinstall/${PART_NAME}/lib/libnghttp2.so.14.17.1",

    ],
    ["Makefile"],
    [
        "cd ${{SOURCE.dir}} ; cmake --build . --config Release --target install -- VERBOSE=1 CC=${{CC}} CXX=${{CXX}} $(-j{jobs}$)".format(
            jobs=env.GetOption('num_jobs'))
    ],
    allow_duplicates=True
)


env.InstallBin(
    env.SetRPath(
        env.Glob("#_makeinstall/${PART_NAME}/bin/*")
    )
)
env.InstallLib(env.Glob("#_makeinstall/${PART_NAME}/lib/*.a"))
env.InstallLib(
    env.SetRPath(
        env.Glob("#_makeinstall/${PART_NAME}/lib/*.so*")
    )
)
env.InstallInclude(
    env.SdkInclude(
        env.Glob("#_makeinstall/${PART_NAME}/include/nghttp2/*"),
        sub_dir="nghttp2",
        add_to_path=False
    ),
    sub_dir="nghttp2"
)
substdict = {env.subst("${ABSPATH('#_makeinstall/$PART_NAME')}"):env.subst("${PACKAGE_ROOT}")}
pc_files = [
    env.Substfile(target="${SOURCE.file}", source=f, SUBST_DICT=substdict) for f in env.Glob("#_makeinstall/${PART_NAME}/lib/pkgconfig/*.pc")
    ]
env.InstallLib(pc_files, auto_add_libs=False, sub_dir="pkgconfig", add_to_path=False)

env.ExportItem("PKGCONFIG", env.Dir("#_makeinstall/${PART_NAME}/lib/pkgconfig").abspath)
env.ExportItem("SDK", env.Dir("#_makeinstall/${PART_NAME}").abspath)
